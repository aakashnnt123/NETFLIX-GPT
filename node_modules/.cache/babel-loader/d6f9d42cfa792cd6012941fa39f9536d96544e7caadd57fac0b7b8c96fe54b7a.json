{"ast":null,"code":"var _jsxFileName = \"D:\\\\netflix-gpt\\\\src\\\\components\\\\VideoBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { API_OPTIONS } from '../utils/const';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTrailerVideo } from '../utils/moviesSlice';\nimport usemoviestrailer from '../hooks/usemoviestrailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoBackground = movie_id => {\n  _s();\n  // const [trailerId,settrailerId] = useState(null)\n  const trailerVideo = useSelector(store => {\n    var _store$movies;\n    return (_store$movies = store.movies) === null || _store$movies === void 0 ? void 0 : _store$movies.trailerVideo;\n  });\n  usemoviestrailer(movie_id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"560\",\n      height: \"315\",\n      src: \"https://www.youtube.com/embed/\" + (trailerVideo === null || trailerVideo === void 0 ? void 0 : trailerVideo.key),\n      title: \"YouTube video player\",\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(VideoBackground, \"6qON70AspkkVxhCsCVIsF67p2uA=\", false, function () {\n  return [useSelector];\n});\n_c = VideoBackground;\nexport default VideoBackground;\nvar _c;\n$RefreshReg$(_c, \"VideoBackground\");","map":{"version":3,"names":["React","useEffect","useState","API_OPTIONS","useDispatch","useSelector","addTrailerVideo","usemoviestrailer","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoBackground","movie_id","_s","trailerVideo","store","_store$movies","movies","children","width","height","src","key","title","frameBorder","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/netflix-gpt/src/components/VideoBackground.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { API_OPTIONS } from '../utils/const'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addTrailerVideo } from '../utils/moviesSlice'\r\nimport usemoviestrailer from '../hooks/usemoviestrailer'\r\n\r\nconst VideoBackground = (movie_id) => {\r\n\r\n    // const [trailerId,settrailerId] = useState(null)\r\n    const trailerVideo  =useSelector(store =>store.movies?.trailerVideo);\r\n    usemoviestrailer(movie_id);\r\n    \r\n    \r\n  return (\r\n    <>\r\n    <iframe \r\n    width=\"560\" \r\n    height=\"315\" \r\n    src={\"https://www.youtube.com/embed/\"+ trailerVideo?.key}\r\n     title=\"YouTube video player\"\r\n      frameBorder=\"0\"\r\n       allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n        allowFullScreen>\r\n\r\n        </iframe>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default VideoBackground"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,sBAAsB;AACtD,OAAOC,gBAAgB,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,eAAe,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EAElC;EACA,MAAMC,YAAY,GAAGV,WAAW,CAACW,KAAK;IAAA,IAAAC,aAAA;IAAA,QAAAA,aAAA,GAAGD,KAAK,CAACE,MAAM,cAAAD,aAAA,uBAAZA,aAAA,CAAcF,YAAY;EAAA,EAAC;EACpER,gBAAgB,CAACM,QAAQ,CAAC;EAG5B,oBACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACAV,OAAA;MACAW,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZC,GAAG,EAAE,gCAAgC,IAAEP,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEQ,GAAG,CAAC;MACxDC,KAAK,EAAC,sBAAsB;MAC3BC,WAAW,EAAC,GAAG;MACdC,KAAK,EAAC,qGAAqG;MAC1GC,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEP;EAAC,gBACX,CAAC;AAGP,CAAC;AAAAjB,EAAA,CAtBKF,eAAe;EAAA,QAGIP,WAAW;AAAA;AAAA2B,EAAA,GAH9BpB,eAAe;AAwBrB,eAAeA,eAAe;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}