{"ast":null,"code":"import _regeneratorRuntime from\"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React,{useEffect,useState}from'react';import{API_OPTIONS}from'../utils/const';import{useDispatch,useSelector}from'react-redux';import{addTrailerVideo}from'../utils/moviesSlice';import{jsx as _jsx}from\"react/jsx-runtime\";var VideoBackground=function VideoBackground(_ref){var movie_id=_ref.movie_id;// const [trailerId,settrailerId] = useState(null)\nvar trailerVideo=useSelector(function(store){var _store$movies;return(_store$movies=store.movies)===null||_store$movies===void 0?void 0:_store$movies.trailerVideo;});// usemoviestrailer(movie_id);\nvar dispatch=useDispatch();var getMovieVideo=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var data,json,filterData,trailer;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://api.themoviedb.org/3/movie/\"+movie_id+\"/videos?language=en-US\",API_OPTIONS);case 2:data=_context.sent;_context.next=5;return data.json();case 5:json=_context.sent;filterData=json.results.filter(function(video){return video.type==\"Trailer\";});trailer=filterData.length?filterData[0]:json.results[0];//  settrailerId(trailer)\ndispatch(addTrailerVideo(trailer));case 9:case\"end\":return _context.stop();}},_callee);}));return function getMovieVideo(){return _ref2.apply(this,arguments);};}();useEffect(function(){getMovieVideo();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"w-screen\",children:/*#__PURE__*/_jsx(\"iframe\",{className:\"w-screen aspect-video\",src:\"https://www.youtube.com/embed/\"+(trailerVideo===null||trailerVideo===void 0?void 0:trailerVideo.key)+\"?&autoplay=1&mute=1\",title:\"YouTube video player\",frameBorder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",allowFullScreen:true})});};export default VideoBackground;","map":{"version":3,"names":["React","useEffect","useState","API_OPTIONS","useDispatch","useSelector","addTrailerVideo","jsx","_jsx","VideoBackground","_ref","movie_id","trailerVideo","store","_store$movies","movies","dispatch","getMovieVideo","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","json","filterData","trailer","wrap","_callee$","_context","prev","next","fetch","sent","results","filter","video","type","length","stop","apply","arguments","className","children","src","key","title","frameBorder","allow","allowFullScreen"],"sources":["D:/netflix-gpt/src/components/VideoBackground.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { API_OPTIONS } from '../utils/const'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addTrailerVideo } from '../utils/moviesSlice'\r\n\r\n\r\nconst VideoBackground = ({movie_id}) => {\r\n\r\n    // const [trailerId,settrailerId] = useState(null)\r\n    const trailerVideo  =useSelector(store =>store.movies?.trailerVideo);\r\n    // usemoviestrailer(movie_id);\r\n    \r\n        const dispatch = useDispatch();\r\n        const getMovieVideo=async ()=>{\r\n           \r\n            const data =  await fetch(\"https://api.themoviedb.org/3/movie/\"+movie_id+\"/videos?language=en-US\", API_OPTIONS)\r\n             const json =  await data.json();\r\n             \r\n             const filterData = json.results.filter((video)=>video.type==\"Trailer\")\r\n             \r\n             const trailer = filterData.length?filterData[0]:json.results[0]\r\n            //  settrailerId(trailer)\r\n             dispatch(addTrailerVideo(trailer))\r\n             \r\n    \r\n        }\r\n    \r\n        useEffect(()=>{\r\n            getMovieVideo()\r\n    \r\n        },[])\r\n    \r\n    \r\n    \r\n  return (\r\n    <div className='w-screen'>\r\n    <iframe \r\n    className='w-screen aspect-video'\r\n    \r\n    src={\"https://www.youtube.com/embed/\"+ trailerVideo?.key+\"?&autoplay=1&mute=1\"}\r\n     title=\"YouTube video player\"\r\n      frameBorder=\"0\"\r\n       allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n        allowFullScreen>\r\n\r\n        </iframe>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default VideoBackground"],"mappings":"wNAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,gBAAgB,CAC5C,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,eAAe,KAAQ,sBAAsB,QAAAC,GAAA,IAAAC,IAAA,yBAGtD,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAAC,IAAA,CAAmB,IAAd,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAE9B;AACA,GAAM,CAAAC,YAAY,CAAGP,WAAW,CAAC,SAAAQ,KAAK,MAAAC,aAAA,QAAAA,aAAA,CAAGD,KAAK,CAACE,MAAM,UAAAD,aAAA,iBAAZA,aAAA,CAAcF,YAAY,GAAC,CACpE;AAEI,GAAM,CAAAI,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAa,aAAa,6BAAAC,KAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAC,QAAA,MAAAC,IAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAC,OAAA,QAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SAEI,CAAAC,KAAK,CAAC,qCAAqC,CAACrB,QAAQ,CAAC,wBAAwB,CAAER,WAAW,CAAC,QAAzGoB,IAAI,CAAAM,QAAA,CAAAI,IAAA,CAAAJ,QAAA,CAAAE,IAAA,SACW,CAAAR,IAAI,CAACC,IAAI,CAAC,CAAC,QAAzBA,IAAI,CAAAK,QAAA,CAAAI,IAAA,CAEJR,UAAU,CAAGD,IAAI,CAACU,OAAO,CAACC,MAAM,CAAC,SAACC,KAAK,QAAG,CAAAA,KAAK,CAACC,IAAI,EAAE,SAAS,GAAC,CAEhEX,OAAO,CAAGD,UAAU,CAACa,MAAM,CAACb,UAAU,CAAC,CAAC,CAAC,CAACD,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC,CAChE;AACClB,QAAQ,CAACV,eAAe,CAACoB,OAAO,CAAC,CAAC,yBAAAG,QAAA,CAAAU,IAAA,MAAAjB,OAAA,GAGtC,kBAZK,CAAAL,aAAaA,CAAA,SAAAC,KAAA,CAAAsB,KAAA,MAAAC,SAAA,OAYlB,CAEDxC,SAAS,CAAC,UAAI,CACVgB,aAAa,CAAC,CAAC,CAEnB,CAAC,CAAC,EAAE,CAAC,CAIX,mBACET,IAAA,QAAKkC,SAAS,CAAC,UAAU,CAAAC,QAAA,cACzBnC,IAAA,WACAkC,SAAS,CAAC,uBAAuB,CAEjCE,GAAG,CAAE,gCAAgC,EAAEhC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEiC,GAAG,EAAC,qBAAsB,CAC9EC,KAAK,CAAC,sBAAsB,CAC3BC,WAAW,CAAC,GAAG,CACdC,KAAK,CAAC,qGAAqG,CAC1GC,eAAe,MAEP,CAAC,CACR,CAAC,CAGV,CAAC,CAED,cAAe,CAAAxC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}