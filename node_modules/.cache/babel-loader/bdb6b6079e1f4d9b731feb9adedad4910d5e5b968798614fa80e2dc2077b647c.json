{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { addTrailerVideo } from \"../utils/moviesSlice\";\nimport { useEffect } from \"react\";\nimport { API_OPTIONS } from \"../utils/const\";\nconst usemoviestrailer = movie_id => {\n  _s();\n  const dispatch = useDispatch();\n  const getMovieVideo = async () => {\n    const data = await fetch(\"https://api.themoviedb.org/3/movie/\" + movie_id + \"/videos?language=en-US\", API_OPTIONS);\n    const json = await data.json();\n    console.log(json);\n    const filterData = json.results.filter(video => video.type === \"Trailer\");\n    console.log(filterData);\n    const trailer = filterData.length ? filterData[0] : json.results[0];\n    //  settrailerId(trailer)\n    dispatch(addTrailerVideo(trailer));\n  };\n  useEffect(() => {\n    getMovieVideo();\n  }, []);\n};\n_s(usemoviestrailer, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\nexport default usemoviestrailer;","map":{"version":3,"names":["useDispatch","addTrailerVideo","useEffect","API_OPTIONS","usemoviestrailer","movie_id","_s","dispatch","getMovieVideo","data","fetch","json","console","log","filterData","results","filter","video","type","trailer","length"],"sources":["D:/netflix-gpt/src/hooks/usemoviestrailer.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { addTrailerVideo } from \"../utils/moviesSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { API_OPTIONS } from \"../utils/const\";\r\n\r\nconst usemoviestrailer = (movie_id)=>{\r\n    const dispatch = useDispatch();\r\n    const getMovieVideo=async ()=>{\r\n       \r\n        const data =  await fetch(\"https://api.themoviedb.org/3/movie/\"+movie_id+\"/videos?language=en-US\", API_OPTIONS)\r\n         const json =  await data.json();\r\n         console.log(json);\r\n         const filterData = json.results.filter((video)=>video.type===\"Trailer\")\r\n         console.log(filterData)\r\n         const trailer = filterData.length?filterData[0]:json.results[0]\r\n        //  settrailerId(trailer)\r\n         dispatch(addTrailerVideo(trailer))\r\n         \r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMovieVideo()\r\n\r\n    },[])\r\n}\r\n\r\nexport default usemoviestrailer;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,MAAMC,gBAAgB,GAAIC,QAAQ,IAAG;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,aAAa,GAAC,MAAAA,CAAA,KAAU;IAE1B,MAAMC,IAAI,GAAI,MAAMC,KAAK,CAAC,qCAAqC,GAACL,QAAQ,GAAC,wBAAwB,EAAEF,WAAW,CAAC;IAC9G,MAAMQ,IAAI,GAAI,MAAMF,IAAI,CAACE,IAAI,CAAC,CAAC;IAC/BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,MAAMG,UAAU,GAAGH,IAAI,CAACI,OAAO,CAACC,MAAM,CAAEC,KAAK,IAAGA,KAAK,CAACC,IAAI,KAAG,SAAS,CAAC;IACvEN,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;IACvB,MAAMK,OAAO,GAAGL,UAAU,CAACM,MAAM,GAACN,UAAU,CAAC,CAAC,CAAC,GAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;IAChE;IACCR,QAAQ,CAACN,eAAe,CAACkB,OAAO,CAAC,CAAC;EAGvC,CAAC;EAEDjB,SAAS,CAAC,MAAI;IACVM,aAAa,CAAC,CAAC;EAEnB,CAAC,EAAC,EAAE,CAAC;AACT,CAAC;AAAAF,EAAA,CApBKF,gBAAgB;EAAA,QACDJ,WAAW;AAAA;AAqBhC,eAAeI,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}