{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectWithoutProperties from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _asyncToGenerator from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncIterator from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport _awaitAsyncGenerator from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"D:/netflix-gpt/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nvar _excluded = [\"signal\"];\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === 'm') throw new TypeError('Private method is not writable');\n  if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a setter');\n  if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver)) throw new TypeError('Cannot write private member to an object whose class did not declare it');\n  return kind === 'a' ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a getter');\n  if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver)) throw new TypeError('Cannot read private member from an object whose class did not declare it');\n  return kind === 'm' ? f : kind === 'a' ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from './version.mjs';\nimport { Stream } from './streaming.mjs';\nimport { APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError } from './error.mjs';\nimport { getDefaultAgent } from 'openai/_shims/agent';\nimport { fetch, isPolyfilled as fetchIsPolyfilled } from 'openai/_shims/fetch';\nimport { isMultipartBody } from './uploads.mjs';\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm } from './uploads.mjs';\nvar MAX_RETRIES = 2;\nfunction defaultParseResponse(_x) {\n  return _defaultParseResponse.apply(this, arguments);\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nfunction _defaultParseResponse() {\n  _defaultParseResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(props) {\n    var response, contentType, json, text;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          response = props.response;\n          if (!props.options.stream) {\n            _context12.next = 3;\n            break;\n          }\n          return _context12.abrupt(\"return\", new Stream(response, props.controller));\n        case 3:\n          contentType = response.headers.get('content-type');\n          if (!(contentType === null || contentType === void 0 ? void 0 : contentType.includes('application/json'))) {\n            _context12.next = 10;\n            break;\n          }\n          _context12.next = 7;\n          return response.json();\n        case 7:\n          json = _context12.sent;\n          debug('response', response.status, response.url, response.headers, json);\n          return _context12.abrupt(\"return\", json);\n        case 10:\n          _context12.next = 12;\n          return response.text();\n        case 12:\n          text = _context12.sent;\n          debug('response', response.status, response.url, response.headers, text);\n          return _context12.abrupt(\"return\", text);\n        case 15:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return _defaultParseResponse.apply(this, arguments);\n}\nexport var APIPromise = /*#__PURE__*/function (_Promise) {\n  _inherits(APIPromise, _Promise);\n  var _super = _createSuper(APIPromise);\n  function APIPromise(responsePromise) {\n    var _this4;\n    var parseResponse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultParseResponse;\n    _classCallCheck(this, APIPromise);\n    _this4 = _super.call(this, function (resolve) {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null);\n    });\n    _this4.responsePromise = responsePromise;\n    _this4.parseResponse = parseResponse;\n    return _this4;\n  }\n  _createClass(APIPromise, [{\n    key: \"_thenUnwrap\",\n    value: function _thenUnwrap(transform) {\n      var _this5 = this;\n      return new APIPromise(this.responsePromise, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(props) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = transform;\n                _context.next = 3;\n                return _this5.parseResponse(props);\n              case 3:\n                _context.t1 = _context.sent;\n                return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     */\n  }, {\n    key: \"asResponse\",\n    value: function asResponse() {\n      return this.responsePromise.then(function (p) {\n        return p.response;\n      });\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     */\n  }, {\n    key: \"withResponse\",\n    value: function () {\n      var _withResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$Promise$all, _yield$Promise$all2, data, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Promise.all([this.parse(), this.asResponse()]);\n            case 2:\n              _yield$Promise$all = _context2.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              data = _yield$Promise$all2[0];\n              response = _yield$Promise$all2[1];\n              return _context2.abrupt(\"return\", {\n                data: data,\n                response: response\n              });\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function withResponse() {\n        return _withResponse.apply(this, arguments);\n      }\n      return withResponse;\n    }()\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      if (!this.parsedPromise) {\n        this.parsedPromise = this.responsePromise.then(this.parseResponse);\n      }\n      return this.parsedPromise;\n    }\n  }, {\n    key: \"then\",\n    value: function then(onfulfilled, onrejected) {\n      return this.parse().then(onfulfilled, onrejected);\n    }\n  }, {\n    key: \"catch\",\n    value: function _catch(onrejected) {\n      return this.parse().catch(onrejected);\n    }\n  }, {\n    key: \"finally\",\n    value: function _finally(onfinally) {\n      return this.parse().finally(onfinally);\n    }\n  }]);\n  return APIPromise;\n}( /*#__PURE__*/_wrapNativeSuper(Promise));\nexport var APIClient = /*#__PURE__*/function () {\n  function APIClient(_ref2) {\n    var baseURL = _ref2.baseURL,\n      maxRetries = _ref2.maxRetries,\n      _ref2$timeout = _ref2.timeout,\n      timeout = _ref2$timeout === void 0 ? 600000 : _ref2$timeout,\n      httpAgent = _ref2.httpAgent,\n      overridenFetch = _ref2.fetch;\n    _classCallCheck(this, APIClient);\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries !== null && maxRetries !== void 0 ? maxRetries : MAX_RETRIES);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n    this.fetch = overridenFetch !== null && overridenFetch !== void 0 ? overridenFetch : fetch;\n  }\n  _createClass(APIClient, [{\n    key: \"authHeaders\",\n    value: function authHeaders(opts) {\n      return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n  }, {\n    key: \"defaultHeaders\",\n    value: function defaultHeaders(opts) {\n      return _objectSpread(_objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'User-Agent': this.getUserAgent()\n      }, getPlatformHeaders()), this.authHeaders(opts));\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n  }, {\n    key: \"validateHeaders\",\n    value: function validateHeaders(headers, customHeaders) {}\n  }, {\n    key: \"defaultIdempotencyKey\",\n    value: function defaultIdempotencyKey() {\n      return \"stainless-node-retry-\".concat(uuid4());\n    }\n  }, {\n    key: \"get\",\n    value: function get(path, opts) {\n      return this.methodRequest('get', path, opts);\n    }\n  }, {\n    key: \"post\",\n    value: function post(path, opts) {\n      return this.methodRequest('post', path, opts);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(path, opts) {\n      return this.methodRequest('patch', path, opts);\n    }\n  }, {\n    key: \"put\",\n    value: function put(path, opts) {\n      return this.methodRequest('put', path, opts);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path, opts) {\n      return this.methodRequest('delete', path, opts);\n    }\n  }, {\n    key: \"methodRequest\",\n    value: function methodRequest(method, path, opts) {\n      return this.request(Promise.resolve(opts).then(function (opts) {\n        return _objectSpread({\n          method: method,\n          path: path\n        }, opts);\n      }));\n    }\n  }, {\n    key: \"getAPIList\",\n    value: function getAPIList(path, Page, opts) {\n      return this.requestAPIList(Page, _objectSpread({\n        method: 'get',\n        path: path\n      }, opts));\n    }\n  }, {\n    key: \"calculateContentLength\",\n    value: function calculateContentLength(body) {\n      if (typeof body === 'string') {\n        if (typeof Buffer !== 'undefined') {\n          return Buffer.byteLength(body, 'utf8').toString();\n        }\n        if (typeof TextEncoder !== 'undefined') {\n          var encoder = new TextEncoder();\n          var encoded = encoder.encode(body);\n          return encoded.length.toString();\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"buildRequest\",\n    value: function buildRequest(options) {\n      var _a, _b, _c, _d, _e, _f;\n      var method = options.method,\n        path = options.path,\n        query = options.query,\n        _options$headers = options.headers,\n        headers = _options$headers === void 0 ? {} : _options$headers;\n      var body = isMultipartBody(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n      var contentLength = this.calculateContentLength(body);\n      var url = this.buildURL(path, query);\n      if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n      var timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : this.timeout;\n      var httpAgent = (_c = (_b = options.httpAgent) !== null && _b !== void 0 ? _b : this.httpAgent) !== null && _c !== void 0 ? _c : getDefaultAgent(url);\n      var minAgentTimeout = timeout + 1000;\n      if (typeof ((_d = httpAgent === null || httpAgent === void 0 ? void 0 : httpAgent.options) === null || _d === void 0 ? void 0 : _d.timeout) === 'number' && minAgentTimeout > ((_e = httpAgent.options.timeout) !== null && _e !== void 0 ? _e : 0)) {\n        // Allow any given request to bump our agent active socket timeout.\n        // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n        // and without mutating agent we would need to create more of them.\n        // This tradeoff optimizes for performance.\n        httpAgent.options.timeout = minAgentTimeout;\n      }\n      if (this.idempotencyHeader && method !== 'get') {\n        if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n        headers[this.idempotencyHeader] = options.idempotencyKey;\n      }\n      var reqHeaders = _objectSpread(_objectSpread(_objectSpread({}, contentLength && {\n        'Content-Length': contentLength\n      }), this.defaultHeaders(options)), headers);\n      // let builtin fetch set the Content-Type for multipart bodies\n      if (isMultipartBody(options.body) && !fetchIsPolyfilled) {\n        delete reqHeaders['Content-Type'];\n      }\n      // Strip any headers being explicitly omitted with null\n      Object.keys(reqHeaders).forEach(function (key) {\n        return reqHeaders[key] === null && delete reqHeaders[key];\n      });\n      var req = _objectSpread(_objectSpread(_objectSpread({\n        method: method\n      }, body && {\n        body: body\n      }), {}, {\n        headers: reqHeaders\n      }, httpAgent && {\n        agent: httpAgent\n      }), {}, {\n        // @ts-ignore node-fetch uses a custom AbortSignal type that is\n        // not compatible with standard web types\n        signal: (_f = options.signal) !== null && _f !== void 0 ? _f : null\n      });\n      this.validateHeaders(reqHeaders, headers);\n      return {\n        req: req,\n        url: url,\n        timeout: timeout\n      };\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n  }, {\n    key: \"prepareRequest\",\n    value: function () {\n      var _prepareRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request, _ref3) {\n        var url, options;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              url = _ref3.url, options = _ref3.options;\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function prepareRequest(_x3, _x4) {\n        return _prepareRequest.apply(this, arguments);\n      }\n      return prepareRequest;\n    }()\n  }, {\n    key: \"parseHeaders\",\n    value: function parseHeaders(headers) {\n      return !headers ? {} : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map(function (header) {\n        return _toConsumableArray(header);\n      })) : _objectSpread({}, headers);\n    }\n  }, {\n    key: \"makeStatusError\",\n    value: function makeStatusError(status, error, message, headers) {\n      return APIError.generate(status, error, message, headers);\n    }\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var remainingRetries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n  }, {\n    key: \"makeRequest\",\n    value: function () {\n      var _makeRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(optionsInput, retriesRemaining) {\n        var _a, _b, _c, options, _this$buildRequest, req, url, timeout, controller, response, responseHeaders, errText, errJSON, errMessage, err;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return optionsInput;\n            case 2:\n              options = _context4.sent;\n              if (retriesRemaining == null) {\n                retriesRemaining = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n              }\n              _this$buildRequest = this.buildRequest(options), req = _this$buildRequest.req, url = _this$buildRequest.url, timeout = _this$buildRequest.timeout;\n              _context4.next = 7;\n              return this.prepareRequest(req, {\n                url: url,\n                options: options\n              });\n            case 7:\n              debug('request', url, options, req.headers);\n              if (!((_b = options.signal) === null || _b === void 0 ? void 0 : _b.aborted)) {\n                _context4.next = 10;\n                break;\n              }\n              throw new APIUserAbortError();\n            case 10:\n              controller = new AbortController();\n              _context4.next = 13;\n              return this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n            case 13:\n              response = _context4.sent;\n              if (!(response instanceof Error)) {\n                _context4.next = 22;\n                break;\n              }\n              if (!((_c = options.signal) === null || _c === void 0 ? void 0 : _c.aborted)) {\n                _context4.next = 17;\n                break;\n              }\n              throw new APIUserAbortError();\n            case 17:\n              if (!retriesRemaining) {\n                _context4.next = 19;\n                break;\n              }\n              return _context4.abrupt(\"return\", this.retryRequest(options, retriesRemaining));\n            case 19:\n              if (!(response.name === 'AbortError')) {\n                _context4.next = 21;\n                break;\n              }\n              throw new APIConnectionTimeoutError();\n            case 21:\n              throw new APIConnectionError({\n                cause: response\n              });\n            case 22:\n              responseHeaders = createResponseHeaders(response.headers);\n              if (response.ok) {\n                _context4.next = 34;\n                break;\n              }\n              if (!(retriesRemaining && this.shouldRetry(response))) {\n                _context4.next = 26;\n                break;\n              }\n              return _context4.abrupt(\"return\", this.retryRequest(options, retriesRemaining, responseHeaders));\n            case 26:\n              _context4.next = 28;\n              return response.text().catch(function () {\n                return 'Unknown';\n              });\n            case 28:\n              errText = _context4.sent;\n              errJSON = safeJSON(errText);\n              errMessage = errJSON ? undefined : errText;\n              debug('response', response.status, url, responseHeaders, errMessage);\n              err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n              throw err;\n            case 34:\n              return _context4.abrupt(\"return\", {\n                response: response,\n                options: options,\n                controller: controller\n              });\n            case 35:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function makeRequest(_x5, _x6) {\n        return _makeRequest.apply(this, arguments);\n      }\n      return makeRequest;\n    }()\n  }, {\n    key: \"requestAPIList\",\n    value: function requestAPIList(Page, options) {\n      var request = this.makeRequest(options, null);\n      return new PagePromise(this, request, Page);\n    }\n  }, {\n    key: \"buildURL\",\n    value: function buildURL(path, query) {\n      var url = isAbsoluteURL(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n      var defaultQuery = this.defaultQuery();\n      if (!isEmptyObj(defaultQuery)) {\n        query = _objectSpread(_objectSpread({}, defaultQuery), query);\n      }\n      if (query) {\n        url.search = this.stringifyQuery(query);\n      }\n      return url.toString();\n    }\n  }, {\n    key: \"stringifyQuery\",\n    value: function stringifyQuery(query) {\n      return Object.entries(query).filter(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          _ = _ref5[0],\n          value = _ref5[1];\n        return typeof value !== 'undefined';\n      }).map(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n          key = _ref7[0],\n          value = _ref7[1];\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n        }\n        if (value === null) {\n          return \"\".concat(encodeURIComponent(key), \"=\");\n        }\n        throw new Error(\"Cannot stringify type \".concat(typeof value, \"; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.\"));\n      }).join('&');\n    }\n  }, {\n    key: \"fetchWithTimeout\",\n    value: function () {\n      var _fetchWithTimeout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(url, init, ms, controller) {\n        var _ref8, signal, options, timeout;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _ref8 = init || {}, signal = _ref8.signal, options = _objectWithoutProperties(_ref8, _excluded);\n              if (signal) signal.addEventListener('abort', function () {\n                return controller.abort();\n              });\n              timeout = setTimeout(function () {\n                return controller.abort();\n              }, ms);\n              return _context5.abrupt(\"return\", this.getRequestClient().fetch(url, _objectSpread({\n                signal: controller.signal\n              }, options)).finally(function () {\n                clearTimeout(timeout);\n              }));\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function fetchWithTimeout(_x7, _x8, _x9, _x10) {\n        return _fetchWithTimeout.apply(this, arguments);\n      }\n      return fetchWithTimeout;\n    }()\n  }, {\n    key: \"getRequestClient\",\n    value: function getRequestClient() {\n      return {\n        fetch: this.fetch\n      };\n    }\n  }, {\n    key: \"shouldRetry\",\n    value: function shouldRetry(response) {\n      // Note this is not a standard header.\n      var shouldRetryHeader = response.headers.get('x-should-retry');\n      // If the server explicitly says whether or not to retry, obey.\n      if (shouldRetryHeader === 'true') return true;\n      if (shouldRetryHeader === 'false') return false;\n      // Retry on lock timeouts.\n      if (response.status === 409) return true;\n      // Retry on rate limits.\n      if (response.status === 429) return true;\n      // Retry internal errors.\n      if (response.status >= 500) return true;\n      return false;\n    }\n  }, {\n    key: \"retryRequest\",\n    value: function () {\n      var _retryRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(options, retriesRemaining, responseHeaders) {\n        var _a, retryAfter, maxRetries, timeout;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              retriesRemaining -= 1;\n              // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n              //\n              // TODO: we may want to handle the case where the header is using the http-date syntax: \"Retry-After: <http-date>\".\n              // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#syntax for details.\n              retryAfter = parseInt((responseHeaders === null || responseHeaders === void 0 ? void 0 : responseHeaders['retry-after']) || '');\n              maxRetries = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n              timeout = this.calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) * 1000;\n              _context6.next = 6;\n              return sleep(timeout);\n            case 6:\n              return _context6.abrupt(\"return\", this.makeRequest(options, retriesRemaining));\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function retryRequest(_x11, _x12, _x13) {\n        return _retryRequest.apply(this, arguments);\n      }\n      return retryRequest;\n    }()\n  }, {\n    key: \"calculateRetryTimeoutSeconds\",\n    value: function calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) {\n      var initialRetryDelay = 0.5;\n      var maxRetryDelay = 2;\n      // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n      // just do what it says.\n      if (Number.isInteger(retryAfter) && retryAfter <= 60) {\n        return retryAfter;\n      }\n      var numRetries = maxRetries - retriesRemaining;\n      // Apply exponential backoff, but not more than the max.\n      var sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\n      // Apply some jitter, plus-or-minus half a second.\n      var jitter = Math.random() - 0.5;\n      return sleepSeconds + jitter;\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return \"\".concat(this.constructor.name, \"/JS \").concat(VERSION);\n    }\n  }]);\n  return APIClient;\n}();\nexport var APIResource = /*#__PURE__*/_createClass(function APIResource(client) {\n  _classCallCheck(this, APIResource);\n  this.client = client;\n  this.get = client.get.bind(client);\n  this.post = client.post.bind(client);\n  this.patch = client.patch.bind(client);\n  this.put = client.put.bind(client);\n  this.delete = client.delete.bind(client);\n  this.getAPIList = client.getAPIList.bind(client);\n});\nexport var AbstractPage = /*#__PURE__*/function (_ref9) {\n  function AbstractPage(client, response, body, options) {\n    _classCallCheck(this, AbstractPage);\n    _AbstractPage_client.set(this, void 0);\n    __classPrivateFieldSet(this, _AbstractPage_client, client, 'f');\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n  _createClass(AbstractPage, [{\n    key: \"hasNextPage\",\n    value: function hasNextPage() {\n      var items = this.getPaginatedItems();\n      if (!items.length) return false;\n      return this.nextPageInfo() != null;\n    }\n  }, {\n    key: \"getNextPage\",\n    value: function () {\n      var _getNextPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var nextInfo, nextOptions, params, _iterator3, _step3, _step3$value, key, value;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              nextInfo = this.nextPageInfo();\n              if (nextInfo) {\n                _context7.next = 3;\n                break;\n              }\n              throw new Error('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n            case 3:\n              nextOptions = _objectSpread({}, this.options);\n              if ('params' in nextInfo) {\n                nextOptions.query = _objectSpread(_objectSpread({}, nextOptions.query), nextInfo.params);\n              } else if ('url' in nextInfo) {\n                params = [].concat(_toConsumableArray(Object.entries(nextOptions.query || {})), _toConsumableArray(nextInfo.url.searchParams.entries()));\n                _iterator3 = _createForOfIteratorHelper(params);\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    _step3$value = _slicedToArray(_step3.value, 2), key = _step3$value[0], value = _step3$value[1];\n                    nextInfo.url.searchParams.set(key, value);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n                nextOptions.query = undefined;\n                nextOptions.path = nextInfo.url.toString();\n              }\n              _context7.next = 7;\n              return __classPrivateFieldGet(this, _AbstractPage_client, 'f').requestAPIList(this.constructor, nextOptions);\n            case 7:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function getNextPage() {\n        return _getNextPage.apply(this, arguments);\n      }\n      return getNextPage;\n    }()\n  }, {\n    key: \"iterPages\",\n    value: function iterPages() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var page;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              // eslint-disable-next-line @typescript-eslint/no-this-alias\n              page = _this;\n              _context8.next = 3;\n              return page;\n            case 3:\n              if (!page.hasNextPage()) {\n                _context8.next = 11;\n                break;\n              }\n              _context8.next = 6;\n              return _awaitAsyncGenerator(page.getNextPage());\n            case 6:\n              page = _context8.sent;\n              _context8.next = 9;\n              return page;\n            case 9:\n              _context8.next = 3;\n              break;\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n  }, {\n    key: _ref9,\n    value: function value() {\n      var _this2 = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, page, _iterator4, _step4, item;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context9.prev = 2;\n              _iterator = _asyncIterator(_this2.iterPages());\n            case 4:\n              _context9.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context9.sent).done)) {\n                _context9.next = 28;\n                break;\n              }\n              page = _step.value;\n              _iterator4 = _createForOfIteratorHelper(page.getPaginatedItems());\n              _context9.prev = 9;\n              _iterator4.s();\n            case 11:\n              if ((_step4 = _iterator4.n()).done) {\n                _context9.next = 17;\n                break;\n              }\n              item = _step4.value;\n              _context9.next = 15;\n              return item;\n            case 15:\n              _context9.next = 11;\n              break;\n            case 17:\n              _context9.next = 22;\n              break;\n            case 19:\n              _context9.prev = 19;\n              _context9.t0 = _context9[\"catch\"](9);\n              _iterator4.e(_context9.t0);\n            case 22:\n              _context9.prev = 22;\n              _iterator4.f();\n              return _context9.finish(22);\n            case 25:\n              _iteratorAbruptCompletion = false;\n              _context9.next = 4;\n              break;\n            case 28:\n              _context9.next = 34;\n              break;\n            case 30:\n              _context9.prev = 30;\n              _context9.t1 = _context9[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context9.t1;\n            case 34:\n              _context9.prev = 34;\n              _context9.prev = 35;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context9.next = 39;\n                break;\n              }\n              _context9.next = 39;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 39:\n              _context9.prev = 39;\n              if (!_didIteratorError) {\n                _context9.next = 42;\n                break;\n              }\n              throw _iteratorError;\n            case 42:\n              return _context9.finish(39);\n            case 43:\n              return _context9.finish(34);\n            case 44:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[2, 30, 34, 44], [9, 19, 22, 25], [35,, 39, 43]]);\n      }))();\n    }\n  }]);\n  return AbstractPage;\n}((_AbstractPage_client = new WeakMap(), Symbol.asyncIterator));\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport var PagePromise = /*#__PURE__*/function (_APIPromise, _Symbol$asyncIterator) {\n  _inherits(PagePromise, _APIPromise);\n  var _super2 = _createSuper(PagePromise);\n  function PagePromise(client, request, Page) {\n    _classCallCheck(this, PagePromise);\n    return _super2.call(this, request, /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(props) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.t0 = Page;\n              _context10.t1 = client;\n              _context10.t2 = props.response;\n              _context10.next = 5;\n              return defaultParseResponse(props);\n            case 5:\n              _context10.t3 = _context10.sent;\n              _context10.t4 = props.options;\n              return _context10.abrupt(\"return\", new _context10.t0(_context10.t1, _context10.t2, _context10.t3, _context10.t4));\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }));\n      return function (_x14) {\n        return _ref10.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  _createClass(PagePromise, [{\n    key: _Symbol$asyncIterator,\n    value: function value() {\n      var _this3 = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var page, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, item;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _awaitAsyncGenerator(_this3);\n            case 2:\n              page = _context11.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context11.prev = 5;\n              _iterator2 = _asyncIterator(page);\n            case 7:\n              _context11.next = 9;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 9:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context11.sent).done)) {\n                _context11.next = 16;\n                break;\n              }\n              item = _step2.value;\n              _context11.next = 13;\n              return item;\n            case 13:\n              _iteratorAbruptCompletion2 = false;\n              _context11.next = 7;\n              break;\n            case 16:\n              _context11.next = 22;\n              break;\n            case 18:\n              _context11.prev = 18;\n              _context11.t0 = _context11[\"catch\"](5);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context11.t0;\n            case 22:\n              _context11.prev = 22;\n              _context11.prev = 23;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context11.next = 27;\n                break;\n              }\n              _context11.next = 27;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 27:\n              _context11.prev = 27;\n              if (!_didIteratorError2) {\n                _context11.next = 30;\n                break;\n              }\n              throw _iteratorError2;\n            case 30:\n              return _context11.finish(27);\n            case 31:\n              return _context11.finish(22);\n            case 32:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, null, [[5, 18, 22, 32], [23,, 27, 31]]);\n      }))();\n    }\n  }]);\n  return PagePromise;\n}(APIPromise, Symbol.asyncIterator);\nexport var createResponseHeaders = function createResponseHeaders(headers) {\n  return new Proxy(Object.fromEntries(\n  // @ts-ignore\n  headers.entries()), {\n    get: function get(target, name) {\n      var key = name.toString();\n      return target[key.toLowerCase()] || target[key];\n    }\n  });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nvar requestOptionsKeys = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true\n};\nexport var isRequestOptions = function isRequestOptions(obj) {\n  return typeof obj === 'object' && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every(function (k) {\n    return hasOwn(requestOptionsKeys, k);\n  });\n};\nvar getPlatformProperties = function getPlatformProperties() {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': Deno.version\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': \"other:\".concat(EdgeRuntime),\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  var browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': \"browser:\".concat(browserInfo.browser),\n      'X-Stainless-Runtime-Version': browserInfo.version\n    };\n  }\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown'\n  };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n  // NOTE: The order matters here!\n  var browserPatterns = [{\n    key: 'edge',\n    pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'chrome',\n    pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'firefox',\n    pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'safari',\n    pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n  }];\n  // Find the FIRST matching browser\n  for (var _i = 0, _browserPatterns = browserPatterns; _i < _browserPatterns.length; _i++) {\n    var _browserPatterns$_i = _browserPatterns[_i],\n      key = _browserPatterns$_i.key,\n      pattern = _browserPatterns$_i.pattern;\n    var match = pattern.exec(navigator.userAgent);\n    if (match) {\n      var major = match[1] || 0;\n      var minor = match[2] || 0;\n      var patch = match[3] || 0;\n      return {\n        browser: key,\n        version: \"\".concat(major, \".\").concat(minor, \".\").concat(patch)\n      };\n    }\n  }\n  return null;\n}\nvar normalizeArch = function normalizeArch(arch) {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return \"other:\".concat(arch);\n  return 'unknown';\n};\nvar normalizePlatform = function normalizePlatform(platform) {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n  platform = platform.toLowerCase();\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return \"Other:\".concat(platform);\n  return 'Unknown';\n};\nvar _platformHeaders;\nvar getPlatformHeaders = function getPlatformHeaders() {\n  return _platformHeaders !== null && _platformHeaders !== void 0 ? _platformHeaders : _platformHeaders = getPlatformProperties();\n};\nexport var safeJSON = function safeJSON(text) {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n// https://stackoverflow.com/a/19709846\nvar startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nvar isAbsoluteURL = function isAbsoluteURL(url) {\n  return startsWithSchemeRegexp.test(url);\n};\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\nvar validatePositiveInteger = function validatePositiveInteger(name, n) {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new Error(\"\".concat(name, \" must be an integer\"));\n  }\n  if (n < 0) {\n    throw new Error(\"\".concat(name, \" must be a positive integer\"));\n  }\n  return n;\n};\nexport var castToError = function castToError(err) {\n  if (err instanceof Error) return err;\n  return new Error(err);\n};\nexport var ensurePresent = function ensurePresent(value) {\n  if (value == null) throw new Error(\"Expected a value to be given but received \".concat(value, \" instead.\"));\n  return value;\n};\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport var readEnv = function readEnv(env) {\n  var _a, _b, _c, _d;\n  if (typeof process !== 'undefined') {\n    return (_b = (_a = process.env) === null || _a === void 0 ? void 0 : _a[env]) !== null && _b !== void 0 ? _b : undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return (_d = (_c = Deno.env) === null || _c === void 0 ? void 0 : _c.get) === null || _d === void 0 ? void 0 : _d.call(_c, env);\n  }\n  return undefined;\n};\nexport var coerceInteger = function coerceInteger(value) {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new Error(\"Could not coerce \".concat(value, \" (type: \").concat(typeof value, \") into a number\"));\n};\nexport var coerceFloat = function coerceFloat(value) {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new Error(\"Could not coerce \".concat(value, \" (type: \").concat(typeof value, \") into a number\"));\n};\nexport var coerceBoolean = function coerceBoolean(value) {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexport var maybeCoerceInteger = function maybeCoerceInteger(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\nexport var maybeCoerceFloat = function maybeCoerceFloat(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\nexport var maybeCoerceBoolean = function maybeCoerceBoolean(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n  if (!obj) return true;\n  for (var _k in obj) return false;\n  return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function debug(action) {\n  if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n    var _console;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    (_console = console).log.apply(_console, [\"OpenAI:DEBUG:\".concat(action)].concat(args));\n  }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nvar uuid4 = function uuid4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nexport var isRunningInBrowser = function isRunningInBrowser() {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\nexport var isHeadersProtocol = function isHeadersProtocol(headers) {\n  return typeof (headers === null || headers === void 0 ? void 0 : headers.get) === 'function';\n};\nexport var getHeader = function getHeader(headers, key) {\n  var lowerKey = key.toLowerCase();\n  if (isHeadersProtocol(headers)) return headers.get(key) || headers.get(lowerKey);\n  var value = headers[key] || headers[lowerKey];\n  if (Array.isArray(value)) {\n    if (value.length <= 1) return value[0];\n    console.warn(\"Received \".concat(value.length, \" entries for the \").concat(key, \" header, using the first entry.\"));\n    return value[0];\n  }\n  return value;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport var toBase64 = function toBase64(str) {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n  throw new Error('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","_AbstractPage_client","VERSION","Stream","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","getDefaultAgent","fetch","isPolyfilled","fetchIsPolyfilled","isMultipartBody","maybeMultipartFormRequestOptions","multipartFormRequestOptions","createForm","MAX_RETRIES","defaultParseResponse","_x","_defaultParseResponse","apply","arguments","props","response","contentType","json","text","_regeneratorRuntime","wrap","_callee12$","_context12","prev","next","options","stream","abrupt","controller","headers","includes","sent","status","url","stop","_callee12","_this4","responsePromise","then","p","Promise","all","parse","asResponse","_yield$Promise$all","_context2","_yield$Promise$all2","_slicedToArray","data","_callee2","withResponse","_withResponse","key","parsedPromise","parseResponse","onrejected","onfulfilled","catch","onfinally","_ref2","_ref2$timeout","timeout","baseURL","validatePositiveInteger","maxRetries","overridenFetch","opts","_objectSpread","getUserAgent","getPlatformHeaders","authHeaders","customHeaders","uuid4","methodRequest","path","method","request","resolve","Page","requestAPIList","body","Buffer","byteLength","toString","TextEncoder","encoder","encoded","encode","length","_b","_c","_d","_e","_f","query","_options$headers","JSON","stringify","contentLength","calculateContentLength","buildURL","_a","httpAgent","minAgentTimeout","idempotencyHeader","idempotencyKey","defaultIdempotencyKey","reqHeaders","defaultHeaders","keys","forEach","req","agent","signal","_ref3","_callee3$","_context3","_callee3","prepareRequest","_x3","_x4","_prepareRequest","iterator","Object","fromEntries","Array","from","map","header","_toConsumableArray","error","message","generate","remainingRetries","undefined","APIPromise","makeRequest","optionsInput","retriesRemaining","_this$buildRequest","responseHeaders","errText","errJSON","errMessage","err","_callee4$","_context4","buildRequest","aborted","AbortController","fetchWithTimeout","castToError","Error","retryRequest","name","cause","createResponseHeaders","ok","shouldRetry","safeJSON","makeStatusError","_callee4","PagePromise","isAbsoluteURL","URL","endsWith","startsWith","slice","defaultQuery","isEmptyObj","stringifyQuery","entries","_ref4","_ref5","_","_ref6","_ref7","encodeURIComponent","concat","init","ms","_ref8","_callee5$","_context5","_objectWithoutProperties","_excluded","addEventListener","abort","setTimeout","getRequestClient","clearTimeout","_callee5","shouldRetryHeader","retryAfter","_callee6$","_context6","parseInt","calculateRetryTimeoutSeconds","sleep","_callee6","initialRetryDelay","maxRetryDelay","Number","isInteger","numRetries","sleepSeconds","Math","min","pow","jitter","random","constructor","APIResource","_createClass","client","_classCallCheck","bind","post","patch","put","delete","getAPIList","AbstractPage","_ref9","set","__classPrivateFieldSet","items","getPaginatedItems","nextPageInfo","_getNextPage","_asyncToGenerator","mark","nextOptions","nextInfo","params","searchParams","_iterator3","_createForOfIteratorHelper","s","_step3","n","done","_step3$value","_this","_wrapAsyncGenerator","_callee8","page","_callee8$","_context8","hasNextPage","_awaitAsyncGenerator","getNextPage","_this2","_callee9","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_iterator4","_step4","item","_callee9$","_context9","_asyncIterator","iterPages","t0","e","finish","t1","return","WeakMap","Symbol","asyncIterator","_APIPromise","_Symbol$asyncIterator","_inherits","_super2","_createSuper","_ref10","_callee10","_callee10$","_context10","t2","t3","t4","_x14","_this3","_callee11","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_callee11$","_context11","Proxy","target","toLowerCase","isRequestOptions","obj","every","k","hasOwn","requestOptionsKeys","getPlatformProperties","Deno","build","normalizePlatform","os","normalizeArch","arch","version","EdgeRuntime","process","prototype","platform","browserInfo","getBrowserInfo","browser","navigator","browserPatterns","pattern","_i","_browserPatterns","_browserPatterns$_i","match","exec","userAgent","major","minor","_platformHeaders","startsWithSchemeRegexp","RegExp","test","ensurePresent","readEnv","env","coerceInteger","round","coerceFloat","parseFloat","coerceBoolean","Boolean","maybeCoerceInteger","maybeCoerceFloat","maybeCoerceBoolean","_k","hasOwnProperty","debug","action","_console","_len","args","_key","log","r","v","c","isRunningInBrowser","window","document"],"sources":["D:\\netflix-gpt\\node_modules\\openai\\src\\core.ts"],"sourcesContent":["import { VERSION } from './version';\nimport { Stream } from './streaming';\nimport { APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError } from './error';\nimport type { Readable } from './_shims/node-readable';\nimport { getDefaultAgent, type Agent } from './_shims/agent';\nimport {\n  fetch,\n  isPolyfilled as fetchIsPolyfilled,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n  type HeadersInit,\n} from './_shims/fetch.js';\nexport { type Response };\nimport { isMultipartBody } from './uploads';\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from './uploads';\n\nconst MAX_RETRIES = 2;\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\ntype APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n};\n\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<T> {\n  const { response } = props;\n  if (props.options.stream) {\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n    return new Stream(response, props.controller) as any;\n  }\n\n  const contentType = response.headers.get('content-type');\n  if (contentType?.includes('application/json')) {\n    const json = await response.json();\n\n    debug('response', response.status, response.url, response.headers, json);\n\n    return json as T;\n  }\n\n  // TODO handle blob, arraybuffer, other content types, etc.\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n  return text as T;\n}\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<T> {\n  private parsedPromise: Promise<T> | undefined;\n\n  constructor(\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (props: APIResponseProps) => PromiseOrValue<T> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n  }\n\n  _thenUnwrap<U>(transform: (data: T) => U): APIPromise<U> {\n    return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n  /**\n   * Gets the parsed response data and the raw `Response` instance.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   */\n  async withResponse(): Promise<{ data: T; response: Response }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response };\n  }\n\n  private parse(): Promise<T> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<T | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    return this.parse().finally(onfinally);\n  }\n}\n\nexport abstract class APIClient {\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    maxRetries,\n    timeout = 600000, // 10 minutes\n    httpAgent,\n    fetch: overridenFetch,\n  }: {\n    baseURL: string;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries ?? MAX_RETRIES);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overridenFetch ?? fetch;\n  }\n\n  protected authHeaders(opts: FinalRequestOptions): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Req extends {}, Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions<Req>>,\n  ): APIPromise<Rsp> {\n    return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    }\n\n    return null;\n  }\n\n  buildRequest<Req extends {}>(\n    options: FinalRequestOptions<Req>,\n  ): { req: RequestInit; url: string; timeout: number } {\n    const { method, path, query, headers: headers = {} } = options;\n\n    const body =\n      isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = timeout + 1000;\n    if (\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\n    ) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const reqHeaders: Record<string, string> = {\n      ...(contentLength && { 'Content-Length': contentLength }),\n      ...this.defaultHeaders(options),\n      ...headers,\n    };\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && !fetchIsPolyfilled) {\n      delete reqHeaders['Content-Type'];\n    }\n\n    // Strip any headers being explicitly omitted with null\n    Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null,\n    };\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return { req, url, timeout };\n  }\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\n    return (\n      !headers ? {}\n      : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map((header) => [...header]))\n      : { ...headers }\n    );\n  }\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  request<Req extends {}, Rsp>(\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n\n  private async makeRequest(\n    optionsInput: PromiseOrValue<FinalRequestOptions>,\n    retriesRemaining: number | null,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    if (retriesRemaining == null) {\n      retriesRemaining = options.maxRetries ?? this.maxRetries;\n    }\n\n    const { req, url, timeout } = this.buildRequest(options);\n\n    await this.prepareRequest(req, { url, options });\n\n    debug('request', url, options, req.headers);\n\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch(() => 'Unknown');\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n\n      debug('response', response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    return { response, options, controller };\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null);\n    return new PagePromise<PageClass, Item>(this, request, Page);\n  }\n\n  buildURL<Req>(path: string, query: Req | undefined): string {\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (query) {\n      url.search = this.stringifyQuery(query);\n    }\n\n    return url.toString();\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new Error(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    return this.getRequestClient()\n      .fetch(url, { signal: controller.signal as any, ...options })\n      .finally(() => {\n        clearTimeout(timeout);\n      });\n  }\n\n  protected getRequestClient(): RequestClient {\n    return { fetch: this.fetch };\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    retriesRemaining -= 1;\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    //\n    // TODO: we may want to handle the case where the header is using the http-date syntax: \"Retry-After: <http-date>\".\n    // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#syntax for details.\n    const retryAfter = parseInt(responseHeaders?.['retry-after'] || '');\n\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    const timeout = this.calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) * 1000;\n    await sleep(timeout);\n\n    return this.makeRequest(options, retriesRemaining);\n  }\n\n  private calculateRetryTimeoutSeconds(\n    retriesRemaining: number,\n    retryAfter: number,\n    maxRetries: number,\n  ): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 2;\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says.\n    if (Number.isInteger(retryAfter) && retryAfter <= 60) {\n      return retryAfter;\n    }\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\n\n    // Apply some jitter, plus-or-minus half a second.\n    const jitter = Math.random() - 0.5;\n\n    return sleepSeconds + jitter;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\n\nexport class APIResource {\n  protected client: APIClient;\n  constructor(client: APIClient) {\n    this.client = client;\n\n    this.get = client.get.bind(client);\n    this.post = client.post.bind(client);\n    this.patch = client.patch.bind(client);\n    this.put = client.put.bind(client);\n    this.delete = client.delete.bind(client);\n    this.getAPIList = client.getAPIList.bind(client);\n  }\n\n  protected get: APIClient['get'];\n  protected post: APIClient['post'];\n  protected patch: APIClient['patch'];\n  protected put: APIClient['put'];\n  protected delete: APIClient['delete'];\n  protected getAPIList: APIClient['getAPIList'];\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new Error(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo) {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: AbstractPage<Item> = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: APIClient,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      request,\n      async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options),\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator]() {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<Req extends {} = Record<string, unknown> | Readable> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | undefined;\n  headers?: Headers | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req extends {} = Record<string, unknown> | Readable> = RequestOptions<Req> & {\n  method: HTTPMethod;\n  path: string;\n};\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': Deno.version,\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new Error(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new Error(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  return new Error(err);\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new Error(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env] ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env);\n  }\n  return undefined;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function debug(action: string, ...args: any[]) {\n  if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n    console.log(`OpenAI:DEBUG:${action}`, ...args);\n  }\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getHeader = (headers: HeadersLike, key: string): string | null | undefined => {\n  const lowerKey = key.toLowerCase();\n  if (isHeadersProtocol(headers)) return headers.get(key) || headers.get(lowerKey);\n  const value = headers[key] || headers[lowerKey];\n  if (Array.isArray(value)) {\n    if (value.length <= 1) return value[0];\n    console.warn(`Received ${value.length} entries for the ${key} header, using the first entry.`);\n    return value[0];\n  }\n  return value;\n};\n\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str: string | null | undefined): string => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n\n  throw new Error('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}