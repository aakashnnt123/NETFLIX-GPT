{"ast":null,"code":"var _jsxFileName = \"D:\\\\netflix-gpt\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createBrowserRouter } from 'react-router-dom';\nimport { RouterProvider } from 'react-router-dom';\nimport Login from './Login';\nimport Browser from './Browser';\nimport { useEffect } from 'react';\nimport { auth } from '../utils/firebase';\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { useDispatch } from 'react-redux';\nimport { addUser, removeUser } from '../utils/userSlice';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const {\n          uid,\n          email,\n          displayName\n        } = user;\n        dispatch(addUser({\n          uid: uid,\n          email: email,\n          displayName: displayName\n        }));\n\n        // ...\n      } else {\n        dispatch(removeUser());\n        // User is signed out\n        // ...\n      }\n    });\n  }, []);\n  const appRouter = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this)\n  }, {\n    path: \"/browse\",\n    element: /*#__PURE__*/_jsxDEV(Browser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: appRouter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","createBrowserRouter","RouterProvider","Login","Browser","useEffect","auth","onAuthStateChanged","useDispatch","addUser","removeUser","Navigate","jsxDEV","_jsxDEV","Body","_s","dispatch","user","uid","email","displayName","appRouter","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","router","_c","$RefreshReg$"],"sources":["D:/netflix-gpt/src/components/Body.js"],"sourcesContent":["import React from 'react'\r\nimport { createBrowserRouter } from 'react-router-dom'\r\nimport { RouterProvider } from 'react-router-dom'\r\nimport Login from './Login'\r\nimport Browser from './Browser'\r\nimport { useEffect } from 'react'\r\nimport { auth } from '../utils/firebase';\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { addUser, removeUser } from '../utils/userSlice';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst Body = () => {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n  \r\n\r\n\r\n        onAuthStateChanged(auth, (user) => {\r\n          if (user) {\r\n            // User is signed in, see docs for a list of available properties\r\n            // https://firebase.google.com/docs/reference/js/auth.user\r\n            const {uid,email,displayName} = user;\r\n            dispatch(addUser({uid:uid,email:email,displayName:displayName}))\r\n            \r\n            // ...\r\n          } else {\r\n            dispatch(removeUser())\r\n            // User is signed out\r\n            // ...\r\n          }\r\n        });\r\n        \r\n        \r\n        },[])\r\n    const appRouter = createBrowserRouter([\r\n        {\r\n            path :\"/\",\r\n            element : <Login/>\r\n        },\r\n        {\r\n            path :\"/browse\",\r\n            element : <Browser/>\r\n        }\r\n\r\n\r\n\r\n\r\n    ])\r\n\r\n    \r\n  return (\r\n    <div>\r\n        <RouterProvider router={appRouter} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AACxD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAG9BH,SAAS,CAAC,MAAI;IAMVE,kBAAkB,CAACD,IAAI,EAAGW,IAAI,IAAK;MACjC,IAAIA,IAAI,EAAE;QACR;QACA;QACA,MAAM;UAACC,GAAG;UAACC,KAAK;UAACC;QAAW,CAAC,GAAGH,IAAI;QACpCD,QAAQ,CAACP,OAAO,CAAC;UAACS,GAAG,EAACA,GAAG;UAACC,KAAK,EAACA,KAAK;UAACC,WAAW,EAACA;QAAW,CAAC,CAAC,CAAC;;QAEhE;MACF,CAAC,MAAM;QACLJ,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;QACtB;QACA;MACF;IACF,CAAC,CAAC;EAGF,CAAC,EAAC,EAAE,CAAC;EACT,MAAMW,SAAS,GAAGpB,mBAAmB,CAAC,CAClC;IACIqB,IAAI,EAAE,GAAG;IACTC,OAAO,eAAGV,OAAA,CAACV,KAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EACrB,CAAC,EACD;IACIL,IAAI,EAAE,SAAS;IACfC,OAAO,eAAGV,OAAA,CAACT,OAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EACvB,CAAC,CAKJ,CAAC;EAGJ,oBACEd,OAAA;IAAAe,QAAA,eACIf,OAAA,CAACX,cAAc;MAAC2B,MAAM,EAAER;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAAAZ,EAAA,CAhDKD,IAAI;EAAA,QACWN,WAAW;AAAA;AAAAsB,EAAA,GAD1BhB,IAAI;AAkDV,eAAeA,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}