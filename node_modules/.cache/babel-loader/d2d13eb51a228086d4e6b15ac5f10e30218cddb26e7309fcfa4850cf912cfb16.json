{"ast":null,"code":"var _jsxFileName = \"D:\\\\netflix-gpt\\\\src\\\\components\\\\GptMovieSuggestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport MovieList from './MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GptMovieSuggestion = () => {\n  _s();\n  const {\n    movieresults,\n    movienames\n  } = useSelector(store => store.gpt);\n  if (!movienames) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 m-4 bg-black text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movienames.map((moviename, index) => /*#__PURE__*/_jsxDEV(MovieList, {\n        title: moviename,\n        movie: movieresults[index]\n      }, moviename, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(GptMovieSuggestion, \"Gqm7SRqAzR2CA3t/XCsBYBttWMs=\", false, function () {\n  return [useSelector];\n});\n_c = GptMovieSuggestion;\nexport default GptMovieSuggestion;\nvar _c;\n$RefreshReg$(_c, \"GptMovieSuggestion\");","map":{"version":3,"names":["React","useState","useSelector","MovieList","jsxDEV","_jsxDEV","GptMovieSuggestion","_s","movieresults","movienames","store","gpt","className","children","map","moviename","index","title","movie","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/netflix-gpt/src/components/GptMovieSuggestion.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport MovieList from './MovieList'\r\n\r\nconst GptMovieSuggestion = () => {\r\n  const {movieresults,movienames}=useSelector(store=>store.gpt)\r\n  if(!movienames) return null;\r\n  return (\r\n    <div className='p-4 m-4 bg-black text-white'>\r\n      <div>\r\n        {\r\n          movienames.map((moviename,index)=>(\r\n            <MovieList key={moviename} title = {moviename} movie={movieresults[index]}/>\r\n          ))\r\n        }\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GptMovieSuggestion"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAACC,YAAY;IAACC;EAAU,CAAC,GAACP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACC,GAAG,CAAC;EAC7D,IAAG,CAACF,UAAU,EAAE,OAAO,IAAI;EAC3B,oBACEJ,OAAA;IAAKO,SAAS,EAAC,6BAA6B;IAAAC,QAAA,eAC1CR,OAAA;MAAAQ,QAAA,EAEIJ,UAAU,CAACK,GAAG,CAAC,CAACC,SAAS,EAACC,KAAK,kBAC7BX,OAAA,CAACF,SAAS;QAAiBc,KAAK,EAAIF,SAAU;QAACG,KAAK,EAAEV,YAAY,CAACQ,KAAK;MAAE,GAA1DD,SAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkD,CAC5E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEV,CAAC;AAAAf,EAAA,CAhBKD,kBAAkB;EAAA,QACUJ,WAAW;AAAA;AAAAqB,EAAA,GADvCjB,kBAAkB;AAkBxB,eAAeA,kBAAkB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}